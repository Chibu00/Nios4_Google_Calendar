---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
--Copyright of Chibuzo Udoji 2021
--THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
--AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
--IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
--DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
--FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
--DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
--SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
--CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
--OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
--OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE
------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------

-----------------------VALUES SET BY THE USER--------------------------
authCodeField = "*auth_code field name in Info table*"
tokenField = "*Google Calendar token field name in Info table*"
refreshTokenField = "*refresh token field name in Info table*"
idCalendarField = "*Google Calendar Id field name in Info table*"
idChannelField = "*id channel field name in Info table*"
resourceIdField = "*resource id field name in Info table*"
table_name  = "*the name of the table of the events in Nios4*"
url = "*https://your_URL_/auth.php*"

--input
token_nios4 = program.usertoken()
db          = database.name
info_table  = database.getsql("SELECT * FROM info")
info_rows   = info_table.getrows()

code                  = info_rows[1].getvalue(authCodeField)
token_google_calendar = info_rows[1].getvalue(tokenField)
refresh_token         = info_rows[1].getvalue(refreshTokenField)
id_calendar           = info_rows[1].getvalue(idCalendarField)
gguid_info            = info_rows[1].getvalue("gguid")
id_channel            = info_rows[1].getvalue(idChannelField)
resource_id           = info_rows[1].getvalue(resourceIdField)

if(code == "") then
    
    program.showerror("Insert authorization code")
    do return end
        
end
    
if(calendar_name == "") then
    
    program.showerror("Insert the name of Google Calendar")
    do return end
        
end

if(token_google_calendar ~= "" or refresh_token ~= "") then
    
    program.showwarning("Account already connect to Google Calendar")
    do return end
        
end

data = {}
data["code"] = code
data["calendarName"] = calendar_name
data["tokenNios4"] = token_nios4
data["db"] = db
data["gguid_info"] = gguid_info
data["idChannel"] = id_channel
data["resourceId"] = resource_id
data["idCalendar"] = id_calendar

http_request  = program.newhttprequest()
value_request = http_request.sendpost(url, data, false)

if(value_request == "NOCODE") then
    
    program.showerror("Invalid Authorization Code")
    do return end

end
    
if(value_request == "NOCALENDAR") then
    
    program.showerror("The Calendar doesn't exist. Insert the coorect name of the Calendar")
    do return end

end
    
if(value_request == "OK") then
    
    program.showconfirm("Successfully connect to Google Calendar")
    program.forcesync()
    do return end
        
end
